{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\desktop\\\\youtube-api\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { SearchBar, VideoDetail, VideoList } from \"./components\";\nimport youtube from \"./api/youtube\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n\n    this.handleSubmit = async searchTerm => {\n      const response = await youtube.get(\"search\", {\n        params: {\n          part: \"snippet\",\n          //to return our videos\n          maxResults: 5,\n          key: \"AIzaSyBfpJPs3SsvVSRYVDCUNKPTa-b6lV-tsoA\",\n          // q is default for query in the youtube api\n          q: searchTerm\n        }\n      });\n      this.setState({\n        videos: response.data.items,\n        selectedVideo: response.data.items[0]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleSubmit('Quantum Computers Explained – Limits of Human Technology');\n  }\n\n  render() {\n    const {\n      selectedVideo,\n      videos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      spacing: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onFormSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      videos: selectedVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      videos: videos,\n      onVideoSelect: this.onVideoSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo/desktop/youtube-api/src/App.js"],"names":["React","Grid","SearchBar","VideoDetail","VideoList","youtube","App","Component","state","videos","selectedVideo","onVideoSelect","video","setState","handleSubmit","searchTerm","response","get","params","part","maxResults","key","q","data","items","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,cAAlD;AAEA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,aAAa,EAAE;AAFT,KADwB;;AAAA,SAUhCC,aAVgC,GAUfC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AACZH,QAAAA,aAAa,EAAEE;AADH,OAAd;AAGD,KAd+B;;AAAA,SAgBhCE,YAhBgC,GAgBjB,MAAOC,UAAP,IAAsB;AACnC,YAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,GAAR,CAAY,QAAZ,EAAsB;AAC3CC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,SADA;AACW;AACjBC,UAAAA,UAAU,EAAE,CAFN;AAGNC,UAAAA,GAAG,EAAE,yCAHC;AAIN;AACAC,UAAAA,CAAC,EAAEP;AALG;AADmC,OAAtB,CAAvB;AAUA,WAAKF,QAAL,CAAc;AACZJ,QAAAA,MAAM,EAAEO,QAAQ,CAACO,IAAT,CAAcC,KADV;AAEZd,QAAAA,aAAa,EAAEM,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoB,CAApB;AAFH,OAAd;AAID,KA/B+B;AAAA;;AAMhCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKX,YAAL,CAAkB,0DAAlB;AACD;;AAyBDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,aAAF;AAAiBD,MAAAA;AAAjB,QAA4B,KAAKD,KAAvC;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,QAAd;AAAuB,MAAA,SAAS,MAAhC;AAAiC,MAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKM,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEJ,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAOE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAED,MAAnB;AAA2B,MAAA,aAAa,EAAE,KAAKE,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADF,CADF,CADF;AAiBD;;AApD+B;;AAuDlC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { SearchBar, VideoDetail, VideoList } from \"./components\";\r\n\r\nimport youtube from \"./api/youtube\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    videos: [],\r\n    selectedVideo: null,\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.handleSubmit('Quantum Computers Explained – Limits of Human Technology');\r\n  }\r\n\r\n  onVideoSelect = (video) => {\r\n    this.setState({\r\n      selectedVideo: video\r\n    })\r\n  }\r\n\r\n  handleSubmit = async (searchTerm) => {\r\n    const response = await youtube.get(\"search\", {\r\n      params: {\r\n        part: \"snippet\", //to return our videos\r\n        maxResults: 5,\r\n        key: \"AIzaSyBfpJPs3SsvVSRYVDCUNKPTa-b6lV-tsoA\",\r\n        // q is default for query in the youtube api\r\n        q: searchTerm,\r\n      },\r\n    });\r\n\r\n    this.setState({\r\n      videos: response.data.items,\r\n      selectedVideo: response.data.items[0],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { selectedVideo, videos } = this.state;\r\n    return (\r\n      <Grid justify=\"center\" container spacing={9}>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={7}>\r\n              <SearchBar onFormSubmit={this.handleSubmit} />\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <VideoDetail videos={selectedVideo} />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <VideoList videos={videos} onVideoSelect={this.onVideoSelect} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}